package cfi_data_analysis;

// to generate Java sources:
//    > cd <project-dir>
//    > csg=<graph-dir> csc=<common-dir> \
//      protoc --proto_path=protos:$csg/protos:$csc/protos --java_out=src protos/*.proto

import "graph.proto";
import "statistics.proto";

option java_package = "edu.uci.plrg.cfi.x86.merge.graph.results";
option java_outer_classname = "HashMerge";

message HashMergeResults {
  optional Process left = 1;
  optional Process right = 2;
  repeated ModuleHashMerge merge = 3;
}

message ModuleHashMerge {
  optional string distribution_name = 1;
  optional UnmatchedNodeSummary left_unmatched = 2;
  optional UnmatchedNodeSummary right_unmatched = 3;
  optional TraceCompilationProfile hash_profile = 4;
  optional TraceCompilationProfile graph_profile = 5;
  optional TraceCompilationProfile graph_within_hash_intersection = 6;
  optional HashMergeSummary merge_summary = 7;
  repeated StatisticsTree statistics = 8;
}

message UnmatchedNodeSummary {
  optional int32 node_count = 1;
  optional int32 eligible_node_count = 2;
  optional int32 unreachable_node_count = 3;
  optional int32 hash_exclusive_node_count = 4;
}

message TraceCompilationProfile {
  optional int32 union = 1;
  optional int32 intersection = 2;
  optional int32 left = 3;
  optional int32 right = 4;
}

message HashMergeSummary {
  optional int32 indirect_edges_matched = 1;
  optional int32 pure_heuristic_matches = 2;
  optional int32 call_continuation_edges_matched = 3;
  optional int32 exception_continuation_edges_matched = 8;
  optional int32 possibly_rewritten_blocks = 4;
  optional int32 module_relative_tag_mismatches = 5;
  optional int32 mismatched_subgraph_count = 6;
  repeated int32 largest_mismatched_subgraphs_size = 7;
}
