package crowd_safe_data_analysis;

import "graph.proto";
import "statistics.proto";

option java_package = "edu.uci.eecs.crowdsafe.merge.graph.data.results";
option java_outer_classname = "Merge";

message MergeResults {
  required Process left = 1;
  required Process right = 2;
  repeated ClusterMerge cluster = 3;
}

message ClusterMerge {
  required string distribution_name = 1;
  optional UnmatchedNodeSummary left_unmatched = 2;
  optional UnmatchedNodeSummary right_unmatched = 3;
  optional TraceCompilationProfile hash_profile = 4;
  optional TraceCompilationProfile graph_profile = 5;
  optional TraceCompilationProfile graph_within_hash_intersection = 6;
  optional MergeSummary merge_summary = 7;
  repeated StatisticsTree statistics = 8;
}

message UnmatchedNodeSummary {
  required int32 node_count = 1;
  optional int32 eligible_node_count = 2;
  optional int32 unreachable_node_count = 3;
  optional int32 hash_exclusive_node_count = 4;
}

message TraceCompilationProfile {
  required int32 union = 1;
  required int32 intersection = 2;
  required int32 left = 3;
  required int32 right = 4;
}

message MergeSummary {
  optional int32 indirect_edges_matched = 1;
  optional int32 pure_heuristic_matches = 2;
  optional int32 call_continuation_edges_matched = 3;
  optional int32 possibly_rewritten_blocks = 4;
  optional int32 module_relative_tag_mismatches = 5;
}  
